{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\froman\fcharset0 TimesNewRomanPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red2\green128\blue9;\red170\green4\blue249;\red14\green0\blue255;
}
{\*\expandedcolortbl;;\csgenericrgb\c784\c50196\c3529;\csgenericrgb\c66667\c1569\c97647;\csgenericrgb\c5490\c0\c100000;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri0\partightenfactor0

\f0\fs20 \cf2 % Clear all stored variables, clear command screen, set output format to 
\fs24 \cf0 \

\fs20 \cf2 % short (i.e., 5 digit format), and close all figures
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 clearvars
\fs24 \

\fs20 clc
\fs24 \

\fs20 format \cf3 short\cf0  
\fs24 \

\fs20 close \cf3 all\cf0  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %% LOAD DATA FILES FOR 3 POSITIONS
\fs24 \cf0 \
\
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 pos_1_data = readmatrix(\cf3 'VSKN_Position1.xlsx'\cf0 ,\cf3 'Range'\cf0 ,\cf3 'B1:D21'\cf0 );
\fs24 \

\fs20 pos_2_data = readmatrix(\cf3 'VSKN_Position2.xlsx'\cf0 ,\cf3 'Range'\cf0 ,\cf3 'B1:D21'\cf0 );
\fs24 \

\fs20 pos_3_data = readmatrix(\cf3 'VSKN_Position3.xlsx'\cf0 ,\cf3 'Range'\cf0 ,\cf3 'B1:D21'\cf0 );
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% ESTABLISH ORTHONORMAL COORDINATE SYSTEM FOR FEMUR MARKER SET
\fs24 \cf0 \

\fs20 \cf2 \
% Load initial coordinate positions of markers
\fs24 \cf0 \

\fs20 \cf2 % position 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 fmt = pos_1_data(1,:); 
\fs24 \

\fs20 fmb = pos_1_data(2,:);   \cf2 %origin of the markers
\fs24 \cf0 \

\fs20 fmf = pos_1_data(3,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 fmt2 = pos_2_data(1,:); 
\fs24 \

\fs20 fmb2 = pos_2_data(2,:);   
\fs24 \

\fs20 fmf2 = pos_2_data(3,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 fmt3 = pos_3_data(1,:); 
\fs24 \

\fs20 fmb3 = pos_3_data(2,:);   
\fs24 \

\fs20 fmf3 = pos_3_data(3,:);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 \
% position 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 a = fmt-fmb; \cf2 % y axis
\fs24 \cf0 \

\fs20 b = fmf-fmb; \cf2 % x axis
\fs24 \cf0 \

\fs20 vec_y = a;
\fs24 \

\fs20 vec_x = b;
\fs24 \

\fs20 vec_z = cross(vec_x,vec_y);
\fs24 \

\fs20 vec_x = cross(vec_y,vec_z);
\fs24 \

\fs20 e_fmy = (vec_y/norm(vec_y)) \cf2 %anterior direction
\fs24 \cf0 \

\fs20 e_fmx = (vec_x/norm(vec_x)) \cf2 %distal direction
\fs24 \cf0 \

\fs20 e_fmz = (vec_z/norm(vec_z)) \cf2 %medial direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 a2 = fmt2-fmb2; \cf2 % y axis
\fs24 \cf0 \

\fs20 b2 = fmf2-fmb2; \cf2 % x axis
\fs24 \cf0 \

\fs20 vec_y2 = a2;
\fs24 \

\fs20 vec_x2 = b2;
\fs24 \

\fs20 vec_z2 = cross(vec_x2,vec_y2);
\fs24 \

\fs20 vec_x2 = cross(vec_y2,vec_z2);
\fs24 \

\fs20 e_fmy2 = (vec_y2/norm(vec_y2)) \cf2 %anterior direction
\fs24 \cf0 \

\fs20 e_fmx2 = (vec_x2/norm(vec_x2)) \cf2 %distal direction
\fs24 \cf0 \

\fs20 e_fmz2 = (vec_z2/norm(vec_z2)) \cf2 %medial direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 a3 = fmt3-fmb3; \cf2 % y axis
\fs24 \cf0 \

\fs20 b3 = fmf3-fmb3; \cf2 % x axis
\fs24 \cf0 \

\fs20 vec_y3 = a3;
\fs24 \

\fs20 vec_x3 = b3;
\fs24 \

\fs20 vec_z3 = cross(vec_x3,vec_y3);
\fs24 \

\fs20 vec_x3 = cross(vec_y3,vec_z3);
\fs24 \

\fs20 e_fmy3 = (vec_y3/norm(vec_y3)) \cf2 %anterior direction
\fs24 \cf0 \

\fs20 e_fmx3 = (vec_x3/norm(vec_x3)) \cf2 %distal direction
\fs24 \cf0 \

\fs20 e_fmz3 = (vec_z3/norm(vec_z3)) \cf2 %medial direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % e_fmx,y,z: base vectors derived from femur marker set 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % w = cross(vec_x,vec_z)
\fs24 \cf0 \

\fs20 \cf2 % w2 = w/norm(w)
\fs24 \cf0 \

\fs20 \cf2 % e_fmy
\fs24 \cf0 \

\fs20 \cf2 % norm(e_fmy)
\fs24 \cf0 \

\fs20 \cf2 % norm(w2) % the unit normal value are the same
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % ----------------------------------------------------------------------- %
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% ESTABLISH ORTHONORMAL COORDINATE SYSTEM FOR TIBIA MARKER SET
\fs24 \cf0 \

\fs20 \cf2 % tmt, digitized tibia top - refers to the divot at the top of the L piece
\fs24 \cf0 \

\fs20 \cf2 % tmb, digitized tibia bottom - refers to the middle divot on the L piece
\fs24 \cf0 \

\fs20 \cf2 % tmf, digitized tibia front - refers to the divot on the L piece closest
\fs24 \cf0 \

\fs20 \cf2 %                              to the joint
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % Load initial coordinate positions of markers
\fs24 \cf0 \

\fs20 \cf2 % postion 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 tmt = pos_1_data(4,:); 
\fs24 \

\fs20 tmb = pos_1_data(5,:);   
\fs24 \

\fs20 tmf = pos_1_data(6,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 tmt2 = pos_2_data(4,:); 
\fs24 \

\fs20 tmb2 = pos_2_data(5,:);   
\fs24 \

\fs20 tmf2 = pos_2_data(6,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 tmt3 = pos_3_data(4,:); 
\fs24 \

\fs20 tmb3 = pos_3_data(5,:);   
\fs24 \

\fs20 tmf3 = pos_3_data(6,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % Establish an orthonormal coordinate system for the tibia market set.
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % e_tmx,y,z: base vectors derived from tibia marker set
\fs24 \cf0 \

\fs20 \cf2 % postion 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 c = tmt-tmb; \cf2 % y axis
\fs24 \cf0 \

\fs20 d = tmf-tmb; \cf2 % x axis
\fs24 \cf0 \

\fs20 vec_y2 = c;
\fs24 \

\fs20 vec_x2 = d;
\fs24 \

\fs20 vec_z2 = cross(vec_x2,vec_y2);
\fs24 \

\fs20 vec_x2 = cross(vec_y2,vec_z2);
\fs24 \

\fs20 e_tmy = (vec_y2/norm(vec_y2))
\fs24 \

\fs20 e_tmx = (vec_x2/norm(vec_x2))
\fs24 \

\fs20 e_tmz = vec_z2/norm(vec_z2)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 c2 = tmt2-tmb2; \cf2 % y axis
\fs24 \cf0 \

\fs20 d2 = tmf2-tmb2; \cf2 % x axis
\fs24 \cf0 \

\fs20 vec_y22 = c2;
\fs24 \

\fs20 vec_x22 = d2;
\fs24 \

\fs20 vec_z22 = cross(vec_x22,vec_y22);
\fs24 \

\fs20 vec_x22 = cross(vec_y22,vec_z22);
\fs24 \

\fs20 e_tmy2 = (vec_y22/norm(vec_y22))
\fs24 \

\fs20 e_tmx2 = (vec_x22/norm(vec_x22))
\fs24 \

\fs20 e_tmz2 = vec_z22/norm(vec_z22)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 c3 = tmt3-tmb3; \cf2 % y axis
\fs24 \cf0 \

\fs20 d3 = tmf3-tmb3; \cf2 % x axis
\fs24 \cf0 \

\fs20 vec_y23 = c3;
\fs24 \

\fs20 vec_x23 = d3;
\fs24 \

\fs20 vec_z23 = cross(vec_x23,vec_y23);
\fs24 \

\fs20 vec_x23 = cross(vec_y23,vec_z23);
\fs24 \

\fs20 e_tmy3 = (vec_y23/norm(vec_y23))
\fs24 \

\fs20 e_tmx3 = (vec_x23/norm(vec_x23))
\fs24 \

\fs20 e_tmz3 = vec_z23/norm(vec_z23)
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% ESTABLISH ORTHONORMAL COORDINATE SYSTEM FOR MOUNTING FRAME CORNERS
\fs24 \cf0 \

\fs20 \cf2 % ftc, digitized mounting frame top - divot on upper back corner, near
\fs24 \cf0 \

\fs20 \cf2 %                                     femur
\fs24 \cf0 \

\fs20 \cf2 % fbc, digitized mounting frame bottom - divot on lower back corner
\fs24 \cf0 \

\fs20 \cf2 % ffc, digitized mounting frame front - divot on lower front corner
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % Load initial coordinate positions of markers
\fs24 \cf0 \

\fs20 \cf2 % position 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 ftc = pos_1_data(7,:); 
\fs24 \

\fs20 fbc = pos_1_data(8,:);   
\fs24 \

\fs20 ffc = pos_1_data(9,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 ftc2 = pos_2_data(7,:); 
\fs24 \

\fs20 fbc2 = pos_2_data(8,:);   
\fs24 \

\fs20 ffc2 = pos_2_data(9,:);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 ftc3 = pos_3_data(7,:); 
\fs24 \

\fs20 fbc3 = pos_3_data(8,:);   
\fs24 \

\fs20 ffc3 = pos_3_data(9,:);
\fs24 \

\fs20  
\fs24 \
\
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % Establish an orthonormal coordinate system for the mounting framer 
\fs24 \cf0 \

\fs20 \cf2 % corners.
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % e_mfx,y,z: base vectors derived from mounting frame corners
\fs24 \cf0 \

\fs20 \cf2 % position 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 e = ftc- fbc; \cf2 % y axis
\fs24 \cf0 \

\fs20 f = ffc - fbc; \cf2 % x axis 
\fs24 \cf0 \

\fs20 vec_y3 = e;
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_x3 = f;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_z3 = cross(f,vec_y3);
\fs24 \

\fs20 vec_x3 = cross(vec_y3,vec_z3);
\fs24 \

\fs20 e_mfy = vec_y3/norm(vec_y3)
\fs24 \

\fs20 e_mfx = vec_x3/norm(vec_x3)
\fs24 \

\fs20 e_mfz = vec_z3/norm(vec_z3)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %  position 2
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 e2 = ftc2- fbc2; \cf2 % y axis
\fs24 \cf0 \

\fs20 f2 = ffc2 - fbc2; \cf2 % x axis 
\fs24 \cf0 \

\fs20 vec_y32 = e2;
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_x3 = f;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_z32 = cross(f2,vec_y32);
\fs24 \

\fs20 vec_x32 = cross(vec_y32,vec_z32);
\fs24 \

\fs20 e_mfy2 = vec_y32/norm(vec_y32)
\fs24 \

\fs20 e_mfx2 = vec_x32/norm(vec_x32)
\fs24 \

\fs20 e_mfz2 = vec_z32/norm(vec_z32)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 e3 = ftc3- fbc3; \cf2 % y axis
\fs24 \cf0 \

\fs20 f3 = ffc3 - fbc3; \cf2 % x axis 
\fs24 \cf0 \

\fs20 vec_y33 = e3;
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_x3 = f;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_z33 = cross(f3,vec_y33);
\fs24 \

\fs20 vec_x33 = cross(vec_y33,vec_z33);
\fs24 \

\fs20 e_mfy3 = vec_y33/norm(vec_y33)
\fs24 \

\fs20 e_mfx3 = vec_x33/norm(vec_x33)
\fs24 \

\fs20 e_mfz3 = vec_z33/norm(vec_z33)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% ESTABLISH EMBEDDED ORTHONORMAL COORDINATE SYSTEM FOR DISTAL FEMUR
\fs24 \cf0 \

\fs20 \cf2 % efdm, embedded femur distal medial - divot on medial side of distal femur 
\fs24 \cf0 \

\fs20 \cf2 %                                      (side with market sets)
\fs24 \cf0 \

\fs20 \cf2 % efdl, embedded femur distal lateral - divot on lateral side of distal
\fs24 \cf0 \

\fs20 \cf2 %                                       femur (nearest mounting frame)
\fs24 \cf0 \

\fs20 \cf2 % efdp, embedded femor distal posterior - divot on posterior (top) side of 
\fs24 \cf0 \

\fs20 \cf2 %                                         distal femur
\fs24 \cf0 \

\fs20 \cf2 % efda, embedded femor dital anterior - divot on anterior (bottom) side of 
\fs24 \cf0 \

\fs20 \cf2 %                                       distal femur
\fs24 \cf0 \

\fs20 \cf2 % efpp, embedded femur proximal posterior - divot on posterior (top) side 
\fs24 \cf0 \

\fs20 \cf2 %                                           of proximal femor
\fs24 \cf0 \

\fs20 \cf2 % efpa, embedded femur proximal anterior - divot on anterior (bottom) side 
\fs24 \cf0 \

\fs20 \cf2 %                                          of proximal femor
\fs24 \cf0 \

\fs20 \cf2 % efdml, embedded femur distal medial-lateral mid-point - location of point
\fs24 \cf0 \

\fs20 \cf2 %                                         between medial and lateral divots
\fs24 \cf0 \

\fs20 \cf2 %                                         within the distal femur
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % Load initial coordinate positions of markers
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % position 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 efdm = pos_1_data(10,:); \cf2 % medial (x direction)
\fs24 \cf0 \

\fs20 efdl = pos_1_data(11,:); \cf2 % lateral (x direction)
\fs24 \cf0 \

\fs20 efdp = pos_1_data(12,:); 
\fs24 \

\fs20 efda = pos_1_data(13,:);
\fs24 \

\fs20 efpp = pos_1_data(14,:);
\fs24 \

\fs20 efpa = pos_1_data(15,:);
\fs24 \

\fs20  
\fs24 \

\fs20 e_femur_distal = mean([efdp;efda])
\fs24 \

\fs20  
\fs24 \

\fs20 e_femur_proximal = mean([efpp;efpa])
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %position 2
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 efdm2 = pos_2_data(10,:); \cf2 % medial (x direction)
\fs24 \cf0 \

\fs20 efdl2 = pos_2_data(11,:); \cf2 % lateral (x direction)
\fs24 \cf0 \

\fs20 efdp2 = pos_2_data(12,:); 
\fs24 \

\fs20 efda2 = pos_2_data(13,:);
\fs24 \

\fs20 efpp2 = pos_2_data(14,:);
\fs24 \

\fs20 efpa2 = pos_2_data(15,:);
\fs24 \

\fs20  
\fs24 \

\fs20 e_femur_distal2 = mean([efdp2;efda2])
\fs24 \

\fs20  
\fs24 \

\fs20 e_femur_proximal2 = mean([efpp2;efpa2])
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 efdm3 = pos_3_data(10,:); \cf2 % medial (x direction)
\fs24 \cf0 \

\fs20 efdl3 = pos_3_data(11,:); \cf2 % lateral (x direction)
\fs24 \cf0 \

\fs20 efdp3 = pos_3_data(12,:); 
\fs24 \

\fs20 efda3 = pos_3_data(13,:);
\fs24 \

\fs20 efpp3 = pos_3_data(14,:);
\fs24 \

\fs20 efpa3 = pos_3_data(15,:);
\fs24 \

\fs20  
\fs24 \

\fs20 e_femur_distal3 = mean([efdp3;efda3])
\fs24 \

\fs20  
\fs24 \

\fs20 e_femur_proximal3 = mean([efpp3;efpa3])
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % Establish an orthonormal coordinate system embedded in the femur. Note 
\fs24 \cf0 \

\fs20 \cf2 % that the origin should be inside the part and understand the correct 
\fs24 \cf0 \

\fs20 \cf2 % orientation of the axes (see Figure 3 in lab introduction).
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % e_efx,y,z: embedded base vectors from distal femur
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % position 1
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 g = e_femur_proximal-e_femur_distal; \cf2 % z direction
\fs24 \cf0 \

\fs20 h = efdm-efdl; \cf2 % x direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % k = efda-e_femur_distal; % y direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_y4 = cross(g,h);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_z4 = g;
\fs24 \cf0 \

\fs20 \cf2 % vec_y4 = k;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_x4 = h;
\fs24 \

\fs20 vec_z4 = cross(vec_x4,vec_y4)
\fs24 \

\fs20 e_efx = vec_x4/norm(vec_x4)
\fs24 \

\fs20 e_efy = vec_y4/norm(vec_y4)
\fs24 \

\fs20 e_efz = vec_z4/norm(vec_z4)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 g2 = e_femur_proximal2-e_femur_distal2; \cf2 % z direction
\fs24 \cf0 \

\fs20 h2 = efdm2-efdl2; \cf2 % x direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % k = efda-e_femur_distal; % y direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_y42 = cross(g2,h2);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_z4 = g;
\fs24 \cf0 \

\fs20 \cf2 % vec_y4 = k;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_x42 = h2;
\fs24 \

\fs20 vec_z42 = cross(vec_x42,vec_y42)
\fs24 \

\fs20 e_efx2 = vec_x42/norm(vec_x42)
\fs24 \

\fs20 e_efy2 = vec_y42/norm(vec_y42)
\fs24 \

\fs20 e_efz2 = vec_z42/norm(vec_z42)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 g3 = e_femur_proximal3-e_femur_distal3; \cf2 % z direction
\fs24 \cf0 \

\fs20 h3 = efdm3-efdl3; \cf2 % x direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % k = efda-e_femur_distal; % y direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_y43 = cross(g3,h3);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_z4 = g;
\fs24 \cf0 \

\fs20 \cf2 % vec_y4 = k;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_x43 = h3;
\fs24 \

\fs20 vec_z43 = cross(vec_x43,vec_y43)
\fs24 \

\fs20 e_efx3 = vec_x43/norm(vec_x43)
\fs24 \

\fs20 e_efy3 = vec_y43/norm(vec_y43)
\fs24 \

\fs20 e_efz3 = vec_z43/norm(vec_z43)
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% ESTABLISH EMBEDDED ORTHONORMAL COORDINATE SYSTEM FOR PROXIMAL TIBIA
\fs24 \cf0 \

\fs20 \cf2 % etpm, embedded tibia proximal medial - divot on medial side of proximal
\fs24 \cf0 \

\fs20 \cf2 %                                        stibia (side with market sets)
\fs24 \cf0 \

\fs20 \cf2 % etpl, embedded tibia proximal lateral - divot on lateral side of 
\fs24 \cf0 \

\fs20 \cf2 %                                         proximal tibia (nearest 
\fs24 \cf0 \

\fs20 \cf2 %                                         mounting frame)
\fs24 \cf0 \

\fs20 \cf2 % etpp, embedded tibia proximal posterior - divot on posterior (top) side 
\fs24 \cf0 \

\fs20 \cf2 %                                           of proximal femur
\fs24 \cf0 \

\fs20 \cf2 % etpa, embedded tibia proximal anterior - divot on anterior (bottom) side 
\fs24 \cf0 \

\fs20 \cf2 %                                          of proximal femur
\fs24 \cf0 \

\fs20 \cf2 % etdp, embedded tibia distal posterior - divot on posterior (top) side 
\fs24 \cf0 \

\fs20 \cf2 %                                         of distal femur
\fs24 \cf0 \

\fs20 \cf2 % etda, embedded tibia distal anterior - divot on anterior (bottom) side 
\fs24 \cf0 \

\fs20 \cf2 %                                        of distal femur
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % Load initial coordinate positions of markers
\fs24 \cf0 \

\fs20 \cf2 %position 1
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 etpm = pos_1_data(16,:); \cf2 % x direction
\fs24 \cf0 \

\fs20 etpl = pos_1_data(17,:); \cf2 % x direction
\fs24 \cf0 \

\fs20 etpp = pos_1_data(18,:);
\fs24 \

\fs20 etpa = pos_1_data(19,:); \cf2 % z direction
\fs24 \cf0 \

\fs20 etdp = pos_1_data(20,:);
\fs24 \

\fs20 etda = pos_1_data(21,:); \cf2 % z direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 e_tibia_proximal = mean([etpp;etpa]);
\fs24 \

\fs20  
\fs24 \

\fs20 e_tibia_distal = mean([etdp;etda]);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %position 2
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 etpm2 = pos_2_data(16,:); \cf2 % x direction
\fs24 \cf0 \

\fs20 etpl2 = pos_2_data(17,:); \cf2 % x direction
\fs24 \cf0 \

\fs20 etpp2 = pos_2_data(18,:);
\fs24 \

\fs20 etpa2 = pos_2_data(19,:); \cf2 % z direction
\fs24 \cf0 \

\fs20 etdp2 = pos_2_data(20,:);
\fs24 \

\fs20 etda2 = pos_2_data(21,:); \cf2 % z direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 e_tibia_proximal2 = mean([etpp2;etpa2]);
\fs24 \

\fs20  
\fs24 \

\fs20 e_tibia_distal2 = mean([etdp2;etda2]);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %position 3
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 etpm3 = pos_3_data(16,:); \cf2 % x direction
\fs24 \cf0 \

\fs20 etpl3 = pos_3_data(17,:); \cf2 % x direction
\fs24 \cf0 \

\fs20 etpp3 = pos_3_data(18,:);
\fs24 \

\fs20 etpa3 = pos_3_data(19,:); \cf2 % z direction
\fs24 \cf0 \

\fs20 etdp3 = pos_3_data(20,:);
\fs24 \

\fs20 etda3 = pos_3_data(21,:); \cf2 % z direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 e_tibia_proximal3 = mean([etpp3;etpa3]);
\fs24 \

\fs20  
\fs24 \

\fs20 e_tibia_distal3 = mean([etdp3;etda3]);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % Establish an orthonormal coordinate system embedded in the tibia. Note 
\fs24 \cf0 \

\fs20 \cf2 % that the origin should be inside the part and understand the correct 
\fs24 \cf0 \

\fs20 \cf2 % orientation of the axes (see Figure 4 in lab introduction).
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % e_etx,y,z: embedded base vectors for proximal tibia
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 i = e_tibia_proximal-e_tibia_distal; \cf2 % z direction
\fs24 \cf0 \

\fs20 j = etpm-etpl; \cf2 % x direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % l = etpa-e_tibia_proximal; % y direction
\fs24 \cf0 \

\fs20 \cf2 % vec_z4 = i;
\fs24 \cf0 \

\fs20 \cf2 % vec_x4 = j;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_y4 = cross(i,j);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_x4 = cross(vec_y4,i);
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_z4 = cross(j,vec_y4);
\fs24 \

\fs20  
\fs24 \

\fs20 e_etx = vec_x4/norm(vec_x4)
\fs24 \

\fs20 e_ety = vec_y4/norm(vec_y4)
\fs24 \

\fs20 e_etz = vec_z4/norm(vec_z4)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 2
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 i2 = e_tibia_proximal2-e_tibia_distal2; \cf2 % z direction
\fs24 \cf0 \

\fs20 j2 = etpm2-etpl2; \cf2 % x direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % l = etpa-e_tibia_proximal; % y direction
\fs24 \cf0 \

\fs20 \cf2 % vec_z4 = i;
\fs24 \cf0 \

\fs20 \cf2 % vec_x4 = j;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_y42 = cross(i2,j2);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_x4 = cross(vec_y4,i);
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_z42 = cross(j2,vec_y42);
\fs24 \

\fs20  
\fs24 \

\fs20 e_etx2 = vec_x42/norm(vec_x42)
\fs24 \

\fs20 e_ety2 = vec_y42/norm(vec_y42)
\fs24 \

\fs20 e_etz2 = vec_z42/norm(vec_z42)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % position 3
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 i3 = e_tibia_proximal3-e_tibia_distal3; \cf2 % z direction
\fs24 \cf0 \

\fs20 j3 = etpm3-etpl3; \cf2 % x direction
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % l = etpa-e_tibia_proximal; % y direction
\fs24 \cf0 \

\fs20 \cf2 % vec_z4 = i;
\fs24 \cf0 \

\fs20 \cf2 % vec_x4 = j;
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_y43 = cross(i3,j3);
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % vec_x4 = cross(vec_y4,i);
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vec_z43 = cross(j3,vec_y43);
\fs24 \

\fs20  
\fs24 \

\fs20 e_etx3 = vec_x43/norm(vec_x43)
\fs24 \

\fs20 e_ety3 = vec_y43/norm(vec_y43)
\fs24 \

\fs20 e_etz3 = vec_z43/norm(vec_z43)
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% PLOT MARKER SETS AND DEFINED COORDINATE SYSTEMS
\fs24 \cf0 \

\fs20 \cf2 % check the figure to ensure the calculated coordinate systems axes are 
\fs24 \cf0 \

\fs20 \cf2 % correct (compare with Figs. 3-5 in lab introduction)
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % ** check that variable names are correct **
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0  
\fs24 \

\fs20 cs_data = [fmb e_fmx e_fmy e_fmz;
\fs24 \

\fs20            tmb e_tmx e_tmy e_tmz;
\fs24 \

\fs20            fbc e_mfx e_mfy e_mfz;
\fs24 \

\fs20            e_femur_distal e_efx e_efy e_efz;
\fs24 \

\fs20            e_tibia_proximal e_etx e_ety e_etz];
\fs24 \

\fs20   
\fs24 \

\fs20 [~] = plot_markers_CS_2021(pos_1_data,cs_data,1);
\fs24 \

\fs20  
\fs24 \

\fs20 cs_data2 = [fmb2 e_fmx2 e_fmy2 e_fmz2;
\fs24 \

\fs20            tmb2 e_tmx2 e_tmy2 e_tmz2;
\fs24 \

\fs20            fbc2 e_mfx2 e_mfy2 e_mfz2;
\fs24 \

\fs20            e_femur_distal2 e_efx2 e_efy2 e_efz2;
\fs24 \

\fs20            e_tibia_proximal2 e_etx2 e_ety2 e_etz2];
\fs24 \

\fs20   
\fs24 \

\fs20 [~] = plot_markers_CS_2021(pos_2_data,cs_data2,2);
\fs24 \

\fs20  
\fs24 \

\fs20 cs_data3 = [fmb3 e_fmx3 e_fmy3 e_fmz3;
\fs24 \

\fs20            tmb3 e_tmx3 e_tmy3 e_tmz3;
\fs24 \

\fs20            fbc3 e_mfx3 e_mfy3 e_mfz3;
\fs24 \

\fs20            e_femur_distal3 e_efx3 e_efy3 e_efz3;
\fs24 \

\fs20            e_tibia_proximal3 e_etx3 e_ety3 e_etz3];
\fs24 \

\fs20   
\fs24 \

\fs20 [~] = plot_markers_CS_2021(pos_3_data,cs_data3,3);
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %% DETERMINE 4x4 TRANSFORMATION MATRICES
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 %  Use transform_matrix.m function
\fs24 \cf0 \

\fs20 \cf2 %     input 1-3: orthonormal axes (e1, e2, e3) that define c.s.
\fs24 \cf0 \

\fs20 \cf2 %     transforming from (unprimed c.s.)
\fs24 \cf0 \

\fs20 \cf2 %     input 4-6: orthonormal axes (e1, e2, e3) that define c.s.
\fs24 \cf0 \

\fs20 \cf2 %     transforming to (primed c.s.)
\fs24 \cf0 \

\fs20 \cf2 %     input 7: x,y,z coordinates of c.s. origin transforming from
\fs24 \cf0 \

\fs20 \cf2 %     input 8: x,y,z coordiantes of c.s. origin transforming to
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% DETERMINE 4x4 TRANSFORMATION MATRIX BETWEEN FEMUR EMBEDDED C.S. and 
\fs24 \cf0 \

\fs20 \cf2 %  MARKET SET C.S.
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 %  (Data Analysis Q1)
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T_fe_fm = transform_matrix(e_efx,e_efy,e_efz,e_fmx,e_fmy,e_fmz,e_femur_distal,fmb)
\fs24 \

\fs20  
\fs24 \

\fs20 T_fe_fm2 = transform_matrix(e_efx2,e_efy2,e_efz2,e_fmx2,e_fmy2,e_fmz2,e_femur_distal2,fmb2)
\fs24 \

\fs20  
\fs24 \

\fs20 T_fe_fm3 = transform_matrix(e_efx3,e_efy3,e_efz3,e_fmx3,e_fmy3,e_fmz3,e_femur_distal3,fmb3)
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% DETERMINE 4x4 TRANSFORMATION MATRIX BETWEEN THE TIBIA MARKER SET C.S. 
\fs24 \cf0 \

\fs20 \cf2 %  AND EMBEDDED C.S.
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 %  (Data Analysis Q2)
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T_tm_te = transform_matrix(e_tmx, e_tmy, e_tmz, e_etx, e_ety, e_etz,tmb, e_tibia_proximal)
\fs24 \

\fs20  
\fs24 \

\fs20 T_tm_te2 = transform_matrix(e_tmx2, e_tmy2, e_tmz2, e_etx2, e_ety2, e_etz2,tmb2, e_tibia_proximal2)
\fs24 \

\fs20  
\fs24 \

\fs20 T_tm_te3 = transform_matrix(e_tmx3, e_tmy3, e_tmz3, e_etx3, e_ety3, e_etz3,tmb3, e_tibia_proximal3)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% DETERMINE 4X4 TRANSFORMATION MATRIX BETWEEN FEMUR MARKER SET C.S. AND
\fs24 \cf0 \

\fs20 \cf2 %  TIBIA MARKER SET C.S.
\fs24 \cf0 \

\fs20 \cf2 %  (Data Analysis Q3)
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %  ** Must be calculated for all 3 positions of the kinematic knee **
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 % Position 1: ~5 degrees of flexion and 0 degrees of tibial rotation
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T_fm_tm_1 = transform_matrix(e_fmx,e_fmy,e_fmz,e_tmx,e_tmy,e_tmz,fmb,tmb)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2 % Position 2: ~30 degrees of knee flexion and ~5 degrees tibial rotation
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T_fm_tm_2 = transform_matrix(e_fmx2,e_fmy2,e_fmz2,e_tmx2,e_tmy2,e_tmz2,fmb2,tmb2)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \
\

\fs20 \cf2 % Position 3: ~90 degrees of knee flexion and ~30 degrees of tibial 
\fs24 \cf0 \

\fs20 \cf2 %             rotation
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T_fm_tm_3 = transform_matrix(e_fmx3,e_fmy3,e_fmz3,e_tmx3,e_tmy3,e_tmz3,fmb3,tmb3)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% DETERMINE THE OVERALL 4x4 TRANSFORMATION MATRIX BETWEEN THE FEMUR 
\fs24 \cf0 \

\fs20 \cf2 %  EMBEDDED C.S. AND TIBIA EMBEDDED C.S.
\fs24 \cf0 \

\fs20 \cf2 %  (Data Analysis Q4)
\fs24 \cf0 \
\
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T_fe_te_1 = T_tm_te*T_fm_tm_1*T_fe_fm
\fs24 \

\fs20 T_fe_te_2 = T_tm_te*T_fm_tm_2*T_fe_fm
\fs24 \

\fs20 T_fe_te_3 = T_tm_te*T_fm_tm_3*T_fe_fm
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- % 
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% DETERMINE EULER ANGLES ASSOCIATED WITH MOTION ON THE FEMUR TO TIBIA 
\fs24 \cf0 \

\fs20 \cf2 %  EMBEDDED C.S. (i.e., T_fe_te) FOR ALL 3 POSITIONS
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 % naming convention; angles should be calculated in degrees
\fs24 \cf0 \

\fs20 \cf2 % psi - CCW rotation about x-axis
\fs24 \cf0 \

\fs20 \cf2 % theta - CCW rotation about y-axis
\fs24 \cf0 \

\fs20 \cf2 % phi - CCW rotation about z-axis
\fs24 \cf0 \

\fs20 \cf2 % see lecture slides when discussing Euler Angles
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \

\fs20 \cf2 % It is encouraged to calculate the angles in radians and then covert to
\fs24 \cf0 \

\fs20 \cf2 % degrees
\fs24 \cf0 \

\fs20 \cf2 %
\fs24 \cf0 \
\

\fs20 \cf2 % Position 1:
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T1=T_fe_te_1;
\fs24 \

\fs20 theta1=asin(T1(3,1));
\fs24 \

\fs20 psi1=-atan2(T1(3,2)/cos(theta1),T1(3,3)/cos(theta1));
\fs24 \

\fs20 phi1=-atan2(T1(2,1)/cos(theta1),T1(1,1)/cos(theta1));
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %Conversion
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 theta1 = rad2deg(theta1)
\fs24 \

\fs20 psi1 = rad2deg(psi1)
\fs24 \

\fs20 phi1 = rad2deg(phi1)
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % Position 2:
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T2=T_fe_te_2;
\fs24 \

\fs20 theta2=asin(T2(3,1));
\fs24 \

\fs20 psi2=-atan2(T2(3,2)/cos(theta2),T2(3,3)/cos(theta2));
\fs24 \

\fs20 phi2=-atan2(T2(2,1)/cos(theta2),T2(1,1)/cos(theta2));
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %Conversion
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 theta2 = rad2deg(theta2)
\fs24 \

\fs20 psi2 = rad2deg(psi2)
\fs24 \

\fs20 phi2 = rad2deg(phi2)
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % Position 3:
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 T3=T_fe_te_3;
\fs24 \

\fs20 theta3=asin(T3(3,1));
\fs24 \

\fs20 psi3=-atan2(T3(3,2)/cos(theta3),T3(3,3)/cos(theta3));
\fs24 \

\fs20 phi3=-atan2(T3(2,1)/cos(theta3),T3(1,1)/cos(theta3));
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %Conversion
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 theta3 = rad2deg(theta3)
\fs24 \

\fs20 psi3 = rad2deg(psi3)
\fs24 \

\fs20 phi3 = rad2deg(phi3)
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % ----------------------------------------------------------------------- %
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \

\fs20 \cf2 %% CREATE PLOTS FOR CHANGES IN EULER ANGLES ACROSS POSITIONS
\fs24 \cf0 \

\fs20 \cf2 % See plotting guidelines in Report Guide document
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0  
\fs24 \

\fs20 figure
\fs24 \

\fs20 position = [1 2 3];
\fs24 \

\fs20 subplot(3,1,1)
\fs24 \

\fs20 psi_a = [psi1, psi2, psi3];
\fs24 \

\fs20 plot(position, psi_a, \cf3 '-o'\cf0 , \cf3 'LineWidth'\cf0 ,2)
\fs24 \

\fs20 title(\cf3 'Psi Euler Angles (Plot a)'\cf0 )
\fs24 \

\fs20 xlabel(\cf3 'Position Number'\cf0 )
\fs24 \

\fs20 ylabel(\cf3 '\\psi Degrees'\cf0 )
\fs24 \

\fs20  
\fs24 \

\fs20 subplot(3,1,2)
\fs24 \

\fs20 theta_a = [theta1, theta2, theta3];
\fs24 \

\fs20 plot(position, theta_a, \cf3 '-o'\cf0 , \cf3 'LineWidth'\cf0 ,2)
\fs24 \

\fs20 title(\cf3 'Theta Euler Angles (Plot b)'\cf0 )
\fs24 \

\fs20 xlabel(\cf3 'Position Number'\cf0 )
\fs24 \

\fs20 ylabel(\cf3 '\\theta Degrees'\cf0 )
\fs24 \

\fs20  
\fs24 \

\fs20 subplot(3,1,3)
\fs24 \

\fs20 phi_a = [phi1, phi2, phi3];
\fs24 \

\fs20 plot(position, phi_a, \cf3 '-o'\cf0 , \cf3 'LineWidth'\cf0 ,2)
\fs24 \

\fs20 title(\cf3 'Phi Euler Angles (Plot c)'\cf0 )
\fs24 \

\fs20 xlabel(\cf3 'Position Number'\cf0 )
\fs24 \

\fs20 ylabel(\cf3 '\\phi Degrees'\cf0 )
\fs24 \

\fs20  
\fs24 \

\fs20 sgtitle(\cf3 'Group 4, Wednesday 2-5pm; Embedded Euler Angle Plots'\cf0 )
\fs24 \

\fs20  
\fs24 \

\fs20 saveas(gcf,\cf3 'eulerplots.png'\cf0 )
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %% Calculate the magnitude of the translation vector
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 r = T_fe_te_1(1:3,4);
\fs24 \

\fs20 q = T_fe_te_2(1:3,4);
\fs24 \

\fs20 ll = T_fe_te_3(1:3,4);
\fs24 \

\fs20  
\fs24 \

\fs20 t1 = norm(r)
\fs24 \

\fs20 t2 = norm(q)
\fs24 \

\fs20 t3 = norm(ll)
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 %% Manual calculation of angles forr position 1,2,3 (psi and phi)
\fs24 \cf0 \

\fs20 \cf2 % psi caluclations for position 1,2,3
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vector1 = efda-efdp; \cf2 % femur distal anterior - femur distal posterior 
\fs24 \cf0 \

\fs20 vector2 = etpa-etpp; \cf2 % tibia proximal anterior - tibia proximal posterior
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 v1 = norm(vector1);
\fs24 \

\fs20 v2 = norm(vector2);
\fs24 \

\fs20  
\fs24 \

\fs20 angle1 = rad2deg(acos((dot(vector1,vector2)./(v1*v2))))
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \

\fs20 vector3 = efda2-efdp2; \cf2 % femur distal anterior - femur distal posterior 
\fs24 \cf0 \

\fs20 vector4 = etpa2-etpp2; \cf2 % tibia proximal anterior - tibia proximal posterior
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 v3 = norm(vector3);
\fs24 \

\fs20 v4 = norm(vector4);
\fs24 \

\fs20  
\fs24 \

\fs20 angle2 = rad2deg(acos((dot(vector3,vector4)./(v3*v4))))
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \

\fs20 vector5 = efda3-efdp3; \cf2 % femur distal anterior - femur distal posterior 
\fs24 \cf0 \

\fs20 vector6 = etpa3-etpp3; \cf2 % tibia proximal anterior - tibia proximal posterior
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 v5 = norm(vector5);
\fs24 \

\fs20 v6 = norm(vector6);
\fs24 \

\fs20  
\fs24 \

\fs20 angle3 = rad2deg(acos((dot(vector5,vector6)./(v5*v6))))
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2 % phi caluclations for position 1,2,3
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 vector7 = etda-etdp; \cf2 % tibia distal anterior - tibia distal posterior 
\fs24 \cf0 \

\fs20 vector8 = etpa-etpp; \cf2 % tibia proximal anterior - tibia proximal posterior
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 v7 = norm(vector7);
\fs24 \

\fs20 v8 = norm(vector8);
\fs24 \

\fs20  
\fs24 \

\fs20 angle4 = rad2deg(acos((dot(vector7,vector8)./(v7*v8))))
\fs24 \

\fs20  
\fs24 \

\fs20  
\fs24 \

\fs20 vector9 = etda2-etdp2; \cf2 % tibia distal anterior - tibia distal posterior 
\fs24 \cf0 \

\fs20 vector10 = etpa2-etpp2; \cf2 % tibia proximal anterior - tibia proximal posterior
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 v9 = norm(vector9);
\fs24 \

\fs20 v10 = norm(vector10);
\fs24 \

\fs20  
\fs24 \

\fs20 angle5 = rad2deg(acos((dot(vector9,vector10)./(v9*v10))))
\fs24 \

\fs20  
\fs24 \

\fs20 vector11 = etda3-etdp3; \cf2 % tibia distal anterior - tibia distal posterior 
\fs24 \cf0 \

\fs20 vector12 = etpa3-etpp3; \cf2 % tibia proximal anterior - tibia proximal posterior
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0 v11 = norm(vector11);
\fs24 \

\fs20 v12 = norm(vector12);
\fs24 \

\fs20  
\fs24 \

\fs20 angle6 = rad2deg(acos((dot(vector11,vector12)./(v11*v12))))\
\pard\pardeftab720\ri0\partightenfactor0

\fs24 \cf0 ----------------------------------------------------------------\
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0  
\fs24 \

\fs20 TRANFORMATION_MATRIX.M FUNCTION\
\pard\pardeftab720\ri0\partightenfactor0

\fs24 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf4 function\cf0  m = transform_matrix(e1,e2,e3,e1p,e2p,e3p,eo,eop)
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0  
\fs24 \

\fs20 m = [dot(e1p,e1) dot(e1p,e2) dot(e1p,e3) eop(1)-eo(1)
\fs24 \

\fs20     dot(e2p,e1) dot(e2p,e2) dot(e2p,e3) eop(2)-eo(2)
\fs24 \

\fs20     dot(e3p,e1) dot(e3p,e2) dot(e3p,e3) eop(3)-eo(3)
\fs24 \

\fs20     0 0 0 1]
\fs24 \
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf4 end
\fs24 \cf0 \
\
\
\pard\pardeftab720\ri0\partightenfactor0

\fs20 \cf0  
\fs24 \
\
\pard\pardeftab720\ri0\qj\partightenfactor0

\f1\b \cf0 \
}